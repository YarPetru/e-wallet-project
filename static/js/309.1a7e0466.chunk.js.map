{"version":3,"file":"static/js/309.1a7e0466.chunk.js","mappings":"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","sources":["webpack://e-wallet-project/./src/components/CardDetails/CardDetails.module.scss?30bf","components/CardDetails/Card.jsx","components/CardDetails/CardDetails.jsx","pages/HomePage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"detailsWrapper\":\"CardDetails_detailsWrapper__TvTsQ\",\"buttonsWrapper\":\"CardDetails_buttonsWrapper__-Q2oY\",\"controlLink\":\"CardDetails_controlLink__WbxMm\",\"controlBtn\":\"CardDetails_controlBtn__ZPI9Z\",\"cardsList\":\"CardDetails_cardsList__JcvUa\",\"cardItem\":\"CardDetails_cardItem__mjcUq\",\"cardBlock\":\"CardDetails_cardBlock__aYJdB\",\"cardHeader\":\"CardDetails_cardHeader__U780S\",\"cardFooter\":\"CardDetails_cardFooter__qeXNg\",\"deleteCardBtn\":\"CardDetails_deleteCardBtn__JxeHV CardDetails_controlBtn__ZPI9Z\",\"cardNumber\":\"CardDetails_cardNumber__qzF-1\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport ReactTooltip from 'react-tooltip';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\nimport { useGetCardInfoQuery } from 'redux/cardInfo/cardInfoSlice';\nimport visaLogo from 'pics/visa-logo.png';\nimport mastercardLogo from 'pics/mastercard-logo.png';\nimport s from './CardDetails.module.scss';\n\nconst Card = ({ cardNumber, cardHolder, expiry }) => {\n  const [tooltip, showTooltip] = useState(true);\n  const [isCopied, setIsCopied] = useState(false);\n\n  isCopied && toast.success('Card number is successfully copied');\n\n  const {\n    data: additionalCardData,\n    isSuccess,\n    error,\n  } = useGetCardInfoQuery(cardNumber);\n\n  error &&\n    toast.error(\n      `Error ${JSON.stringify(\n        error.status\n      )}, additional card data is not available`\n    );\n\n  return (\n    isSuccess &&\n    !error && (\n      <>\n        <div className={s.cardBlock}>\n          <div className={s.cardHeader}>\n            {additionalCardData.bank && (\n              <p className={s.bankName}>{additionalCardData.bank.name}</p>\n            )}\n            {additionalCardData.type && (\n              <p className={s.typeCard}>{additionalCardData.type}</p>\n            )}\n          </div>\n          <CopyToClipboard text={cardNumber} onCopy={() => setIsCopied(true)}>\n            <p\n              data-tip=\"click to copy card number\"\n              onMouseEnter={() => showTooltip(true)}\n              onMouseLeave={() => {\n                showTooltip(false);\n                setTimeout(() => showTooltip(true), 50);\n              }}\n              className={s.cardNumber}\n            >\n              {cardNumber}\n            </p>\n          </CopyToClipboard>\n          <div className={s.cardFooter}>\n            <div className={s.footerLeftBlock}>\n              {cardHolder && <p className={s.cardHolder}>{cardHolder}</p>}\n              {expiry && (\n                <p className={s.expiry}>{expiry.split('-').join('/')}</p>\n              )}\n            </div>\n            <div className={s.footerLeftBlock}>\n              {additionalCardData.scheme &&\n                additionalCardData.scheme === 'visa' && (\n                  <img src={visaLogo} alt=\"payment system logo\" width=\"50\" />\n                )}\n              {additionalCardData.scheme &&\n                additionalCardData.scheme === 'mastercard' && (\n                  <img\n                    src={mastercardLogo}\n                    alt=\"payment system logo\"\n                    width=\"50\"\n                  />\n                )}\n              {additionalCardData.scheme &&\n                additionalCardData.scheme !== 'visa' &&\n                additionalCardData.scheme !== 'mastercard' && (\n                  <p>{additionalCardData.scheme}</p>\n                )}\n            </div>\n          </div>\n        </div>\n        {tooltip && <ReactTooltip type=\"light\" />}\n      </>\n    )\n  );\n};\n\nCard.propTypes = {\n  cardNumber: PropTypes.string.isRequired,\n  cardHolder: PropTypes.string,\n  expiry: PropTypes.string.isRequired,\n};\n\nexport default Card;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux/es/exports';\nimport { Link } from 'react-router-dom';\n\nimport * as reduxActions from 'redux/actions';\nimport Modal from 'components/Modal';\nimport Title from 'components/Title';\nimport Card from './Card';\nimport s from './CardDetails.module.scss';\n\nconst CardDetails = () => {\n  const cards = useSelector(state => state.wallet.cards);\n\n  const dispatch = useDispatch();\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  const onDeleteCard = cardId => {\n    dispatch(reduxActions.deleteCard(cardId));\n  };\n\n  return (\n    <>\n      <Title title=\"Details\" />\n      <div className={s.detailsWrapper}>\n        <div className={s.buttonsWrapper}>\n          <Link className={s.controlLink} to=\"/add-card\">\n            <button type=\"button\" className={s.controlBtn}>\n              Add Card\n            </button>\n          </Link>\n          <Link className={s.controlLink} to=\"/edit-cash\" onClick={openModal}>\n            <button type=\"button\" className={s.controlBtn}>\n              Edit Cash\n            </button>\n          </Link>\n        </div>\n\n        <ul className={s.cardsList}>\n          {cards &&\n            cards.map(card => (\n              <li key={card.id} className={s.cardItem}>\n                <Card\n                  cardNumber={card.cardNumber}\n                  cardHolder={card.cardHolder}\n                  expiry={card.expiry}\n                />\n                <button\n                  className={s.deleteCardBtn}\n                  type=\"button\"\n                  onClick={() => onDeleteCard(card.id)}\n                >\n                  Remove\n                </button>\n              </li>\n            ))}\n        </ul>\n      </div>\n      {isModalOpen && <Modal onClose={closeModal} />}\n    </>\n  );\n};\n\nexport default CardDetails;\n","import CardDetails from 'components/CardDetails';\n\nconst HomePage = () => {\n  return <CardDetails />;\n};\n\nexport default HomePage;\n"],"names":["cardNumber","cardHolder","expiry","useState","tooltip","showTooltip","isCopied","setIsCopied","toast","useGetCardInfoQuery","additionalCardData","data","isSuccess","error","JSON","stringify","status","className","s","bank","name","type","CopyToClipboard","text","onCopy","onMouseEnter","onMouseLeave","setTimeout","split","join","scheme","src","visaLogo","alt","width","mastercardLogo","cards","useSelector","state","wallet","dispatch","useDispatch","isModalOpen","setIsModalOpen","Title","title","to","onClick","map","card","cardId","id","reduxActions","Modal","onClose"],"sourceRoot":""}