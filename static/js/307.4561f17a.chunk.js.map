{"version":3,"file":"static/js/307.4561f17a.chunk.js","mappings":"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","sources":["webpack://e-wallet-project/./src/components/NewCardForm/NewCardForm.module.scss?1b8e","components/NewCardForm/NewCardForm.jsx","pages/AddCardPage.jsx","../node_modules/fast-luhn/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"NewCardForm_form__d36Sw\",\"fieldWrapper\":\"NewCardForm_fieldWrapper__BhHdC\",\"input\":\"NewCardForm_input__2PBNi\",\"errorMessage\":\"NewCardForm_errorMessage__XxiXd\",\"buttonsWrapper\":\"NewCardForm_buttonsWrapper__RBGDf\",\"formBtn\":\"NewCardForm_formBtn__ShhKG\",\"cancelBtn\":\"NewCardForm_cancelBtn__X5gDj\"};","import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux/es/exports';\nimport { toast } from 'react-toastify';\n\nimport * as reduxActions from 'redux/actions';\nimport Title from 'components/Title';\nimport s from './NewCardForm.module.scss';\nimport luhn from 'fast-luhn';\n\nyup.addMethod(yup.string, 'integer', function () {\n  return this.matches(/^\\d+$/, 'The field should have digits only');\n});\n\nconst schema = yup.object().shape({\n  cardNumber: yup\n    .string()\n    .integer()\n    .length(16)\n    .required('Card number is a requred field'),\n  expiry: yup.string().required('Expiry is a requred field'),\n  cvv: yup.string().integer().length(3).required('CVV is a requred field'),\n  cardHolder: yup.string(),\n  amount: yup.string().integer().required('Amount is a requred field'),\n  currency: yup.string().required('You have to choose a currency'),\n});\n\nconst initialValues = {\n  cardNumber: '',\n  expiry: '',\n  cvv: '',\n  cardHolder: '',\n  amount: '',\n  currency: '',\n};\n\nconst NewCardForm = () => {\n  const cards = useSelector(state => state.wallet.cards);\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, actions) => {\n    const currentNumbers = cards.map(card => card.cardNumber);\n\n    currentNumbers.includes(values.cardNumber) &&\n      toast.warn('You already have card with the same number');\n\n    !currentNumbers.includes(values.cardNumber) &&\n      luhn(values.cardNumber) &&\n      dispatch(\n        reduxActions.addCard(\n          values.amount,\n          values.cardHolder,\n          values.cardNumber,\n          values.currency,\n          values.cvv,\n          values.expiry\n        )\n      ) &&\n      actions.resetForm();\n\n    luhn(values.cardNumber) === false &&\n      toast.warn(\n        'ðŸ˜¢ You entered the invalid card number - it does not satisfy the luhn algorithm. Try again, please'\n      );\n  };\n\n  return (\n    <>\n      <Title title=\"Adding Cards\" />\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <Form className={s.form}>\n          <div className={s.fieldWrapper}>\n            <Field\n              className={`${s.input} ${s.cardNumberInput}`}\n              id=\"cardNumber\"\n              name=\"cardNumber\"\n              placeholder=\"XXXX-XXXX-XXXX-XXXX\"\n            />\n            <ErrorMessage\n              className={s.errorMessage}\n              name=\"cardNumber\"\n              component=\"div\"\n            />\n          </div>\n\n          <div className={s.fieldWrapper}>\n            <Field\n              className={`${s.input} ${s.expiryInput}`}\n              id=\"expire\"\n              name=\"expiry\"\n              type=\"month\"\n              min=\"2022-09\"\n              max=\"2030-12\"\n            />\n            <ErrorMessage\n              className={s.errorMessage}\n              name=\"expiry\"\n              component=\"div\"\n            />\n          </div>\n\n          <div className={s.fieldWrapper}>\n            <Field\n              className={`${s.input} ${s.cvvInput}`}\n              id=\"cvv\"\n              name=\"cvv\"\n              placeholder=\"CVV\"\n            />\n            <ErrorMessage\n              className={s.errorMessage}\n              name=\"cvv\"\n              component=\"div\"\n            />\n          </div>\n\n          <div className={s.fieldWrapper}>\n            <Field\n              className={`${s.input} ${s.cardHolderInput}`}\n              id=\"cardHolder\"\n              name=\"cardHolder\"\n              placeholder=\"Card Holder Name\"\n            />\n          </div>\n\n          <div className={s.fieldWrapper}>\n            <Field\n              className={`${s.input} ${s.amountInput}`}\n              id=\"amount\"\n              name=\"amount\"\n              placeholder=\"Amount\"\n            />\n            <ErrorMessage\n              className={s.errorMessage}\n              name=\"amount\"\n              component=\"div\"\n            />\n          </div>\n\n          <div className={s.fieldWrapper}>\n            <Field\n              className={s.input}\n              as=\"select\"\n              id=\"currency\"\n              name=\"currency\"\n            >\n              <option className={s.option} value=\"\">\n                Select a currency\n              </option>\n              <option className={s.option} value=\"UAH\">\n                UAH\n              </option>\n              <option className={s.option} value=\"USD\">\n                USD\n              </option>\n              <option className={s.option} value=\"EUR\">\n                EUR\n              </option>\n            </Field>\n            <ErrorMessage\n              className={s.errorMessage}\n              name=\"currency\"\n              component=\"div\"\n            />\n          </div>\n\n          <div className={s.buttonsWrapper}>\n            <button className={s.formBtn} type=\"submit\">\n              Add Card\n            </button>\n            <button className={`${s.formBtn} ${s.cancelBtn}`} type=\"reset\">\n              Cancel\n            </button>\n          </div>\n        </Form>\n      </Formik>\n    </>\n  );\n};\n\nexport default NewCardForm;\n","import NewCardForm from 'components/NewCardForm';\n\nconst AddCardPage = () => {\n  return <NewCardForm />;\n};\n\nexport default AddCardPage;\n","'use strict'\n\nmodule.exports = (function (array) {\n  return function luhn (number) {\n    if (typeof number !== 'string') throw new TypeError('Expected string input')\n    if (!number) return false\n    let length = number.length\n    let bit = 1\n    let sum = 0\n    let value\n\n    while (length) {\n      value = parseInt(number.charAt(--length), 10)\n      bit ^= 1\n      sum += bit ? array[value] : value\n    }\n\n    return sum % 10 === 0\n  }\n}([0, 2, 4, 6, 8, 1, 3, 5, 7, 9]))\n"],"names":["yup","this","matches","schema","shape","cardNumber","integer","length","required","expiry","cvv","cardHolder","amount","currency","initialValues","cards","useSelector","state","wallet","dispatch","useDispatch","Title","title","validationSchema","onSubmit","values","actions","currentNumbers","map","card","includes","toast","luhn","reduxActions","resetForm","className","s","id","name","placeholder","component","type","min","max","as","value","array","module","exports","number","TypeError","bit","sum","parseInt","charAt"],"sourceRoot":""}